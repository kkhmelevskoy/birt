/********************************************************************************
 * (C) Copyright 2000-2005, by Shawn Qualia.
 *
 * This library is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU Lesser General Public License as published by 
 * the Free Software Foundation; either version 2.1 of the License, or 
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License 
 * along with this library; if not, write to the Free Software Foundation, 
 * Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
 *
 * [Java is a trademark or registered trademark of Sun Microsystems, Inc. 
 * in the United States and other countries.]
 ********************************************************************************/

package org.uguess.birt.report.engine.emitter.xls;

/**
 * XlsEmitterConfig
 */
public final class XlsEmitterConfig
{

	// prevent from instanciate.
	private XlsEmitterConfig( )
	{
	}

	/**
	 * Represents if remove the empty rows during output. The value should be a
	 * Boolean object.
	 */
	public final static String KEY_REMOVE_EMPTY_ROW = "remove_empty_row"; //$NON-NLS-1$

	/**
	 * Represents if show grid lines in output. The value should be a Boolean
	 * object.
	 */
	public final static String KEY_SHOW_GRID_LINES = "show_grid_lines"; //$NON-NLS-1$

	/**
	 * Represents the page range for output. Examples: "1,2,3", "1-8",
	 * "1,4,7-8", or "odd" for odd number pages, "even" for even number pages.
	 * The value should be a String object.
	 */
	public final static String KEY_PAGE_RANGE = "page_range"; //$NON-NLS-1$

	/**
	 * Represents the fixed column width to be used in output. The value should
	 * be an Integer object(>0).
	 */
	public final static String KEY_FIXED_COLUMN_WIDTH = "fixed_column_width"; //$NON-NLS-1$

	/**
	 * Represents if export the page body only, e.g. not include page
	 * header/footer.The value should be a Boolean object.
	 */
	public final static String KEY_EXPORT_BODY_ONLY = "export_body_only"; //$NON-NLS-1$

	/**
	 * Represents if ignores the image element with unkonw format in the ouput.
	 * Default will replace it with a text element with warning message. The
	 * value should be a Boolean object.
	 */
	public final static String KEY_SUPPRESS_UNKNOWN_IMAGE = "suppress_unknown_image"; //$NON-NLS-1$

	/**
	 * Represents if export all pages into a single sheet.The value should be a
	 * Boolean object.
	 */
	public final static String KEY_EXPORT_SINGLE_SHEET = "export_single_page"; //$NON-NLS-1$

	/**
	 * Represents if the ouput uses legacy mode, which uses the old layout
	 * algorithm. The value should be a Boolean object.
	 */
	public final static String KEY_LEGACY_MODE = "legacy"; //$NON-NLS-1$

	/**
	 * Represents if comments is enabled in the ouput. If enabled, the comments
	 * property on report item will be converted to Excel comments if
	 * applicable. The value should be a Boolean object.
	 */
	public final static String KEY_ENABLE_COMMENTS = "enable_comments"; //$NON-NLS-1$

	/**
	 * Represent the expression to populate the sheet name per page. The
	 * expression syntax is in <a
	 * href="http://commons.apache.org/jexl/">JEXL(Java Expression
	 * Language)</a>. Note for security reason, any loop structure(e.g. foreach,
	 * while) is intentionally disallowed in the expression.
	 * 
	 * <p>
	 * Following predefined variables can be used in the expression:
	 * <ul>
	 * <li><b>pageIndex</b> - the 1-based index representing the current page
	 * number in the report.
	 * <li><b>sheetIndex</b> - the 1-based index representing the current sheet
	 * number in the XLS output.
	 * <li><b>rptContext</b> - the report context object associated with current
	 * render task.
	 * <ul>
	 * <em>This object inherits the same method signatures from the 
	 * <code>IReportContext</code> interface, but all potentially unsecured
	 * methods are removed, only following methods are available at this time:</em>
	 * <li>getLocale
	 * <li>getGlobalVariable
	 * <li>getPageVariable
	 * <li>getPersistentGlobalVariable
	 * <li>getParameterDisplayText
	 * <li>getParameterValue
	 * </ul>
	 * </ul>
	 * 
	 * <p>
	 * <em><b>Note the name generated by the given expression per sheet cannot be duplicate
	 * or contain char among /\?*[], also as Excel only allows sheet name up to 31 chars, 
	 * the uniqueness of the name is checked by the first 31 chars, extra chars may be 
	 * visible in other applications but truncated in Excel.</b></em>
	 * 
	 * <p>
	 * Examples: <blockquote>
	 * <table cellpadding=1 cellspacing=0 border=1 summary="Capturing group numberings">
	 * <tr>
	 * <th>Expression</th>
	 * <th>Result</th>
	 * </tr>
	 * <tr>
	 * <td>"My Sheet " + sheetIndex</td>
	 * <td><tt>My Sheet 1</tt></td>
	 * </tr>
	 * <tr>
	 * <td>"Sheet " + sheetIndex + "(page "+ pageIndex + ")"</td>
	 * <td><tt>Sheet 1 (page 1)</tt></td>
	 * </tr>
	 * <tr>
	 * <td>rptContext.getParameterValue("pn") + sheetIndex</td>
	 * <td><tt>[pv]1</tt></td>
	 * </tr>
	 * <tr>
	 * <td>rptContext.getGlobalVariable("vn") + sheetIndex</td>
	 * <td><tt>[vv]1</tt></td>
	 * </tr>
	 * <tr>
	 * <td>if(pageIndex==1){"cover";}else{"page "+(pageIndex-1);}</td>
	 * <td><tt>cover|page 1</tt></td>
	 * </tr>
	 * </table>
	 * </blockquote>
	 */
	public final static String KEY_SHEET_NAME_EXPR = "sheet_name"; //$NON-NLS-1$

}
